[{"C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\index.js":"1","C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\App.js":"2","C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\components\\QouteGenerator.js":"3"},{"size":265,"mtime":1688876002700,"results":"4","hashOfConfig":"5"},{"size":502,"mtime":1688877539561,"results":"6","hashOfConfig":"5"},{"size":2260,"mtime":1688882826244,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vzpoc",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"18"},"C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\index.js",[],[],"C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\App.js",["19"],[],"import './App.css';\r\nimport QouteGenerator from './components/QouteGenerator';\r\nimport ReactFCCtest from 'react-fcctest';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <img className='bg-image' src='https://images.pexels.com/photos/9304311/pexels-photo-9304311.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1' alt='' />\r\n      {/* <ReactFCCtest /> */}\r\n      <section id='main-app-section'>\r\n        <QouteGenerator />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\My PC\\Code\\Personal\\quoter\\src\\components\\QouteGenerator.js",["20","21","22","23"],[],"import React, { useEffect, useState } from 'react'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n\r\nfunction QouteGenerator() {\r\n    const API_URL = 'https://api.quotable.io/random';\r\n    const [quote, setQuote] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const [showButton, setShowButton] = useState(false);\r\n\r\n    function pullQuotes() {\r\n        fetch(API_URL)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAuthor(data.author)\r\n                setQuote(data.content)\r\n                // console.log(data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        pullQuotes()\r\n    }, [])\r\n\r\n    return (\r\n        <div id='quote-box'>\r\n            <div className='quote-content__container'>\r\n                <div><span id='author'> - {author} -</span></div>\r\n                <div onClick={pullQuotes}>\r\n                    <span id='text'>{quote}</span>\r\n                </div>\r\n            </div>\r\n            <div className='quote-controls'>\r\n                <button\r\n                    onClick={() => {\r\n                        navigator.clipboard.writeText(quote);\r\n                        alert('Quote has been copied!')\r\n                    }}\r\n                    id='copy-icon'\r\n                >\r\n                    <span id=''></span>\r\n                </button>\r\n                <button\r\n                    className='share-button'\r\n                    onClick={() => setShowButton(!showButton)}\r\n                >\r\n                    <span>share</span>\r\n                </button>\r\n                <div id='share-content' className={`share-content ${(showButton) ? \"\" : \"hidden\"}`}>\r\n                    <div>\r\n                        <a\r\n                            className='button'\r\n                            href={`https://twitter.com/intent/tweet?text=\"${quote}\" -    ${author}&hashtags=quote`} id='tweet-quote'\r\n                            target='_blank'><span>Tweet</span></a>\r\n                    </div>\r\n                </div>\r\n                {/* <button onClick={pullQuotes} id='new-quote'>New quote</button> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QouteGenerator",{"ruleId":"24","severity":1,"message":"25","line":3,"column":8,"nodeType":"26","messageId":"27","endLine":3,"endColumn":20},{"ruleId":"24","severity":1,"message":"28","line":2,"column":10,"nodeType":"26","messageId":"27","endLine":2,"endColumn":25},{"ruleId":"24","severity":1,"message":"29","line":3,"column":10,"nodeType":"26","messageId":"27","endLine":3,"endColumn":16},{"ruleId":"24","severity":1,"message":"30","line":3,"column":18,"nodeType":"26","messageId":"27","endLine":3,"endColumn":33},{"ruleId":"31","severity":1,"message":"32","line":52,"column":25,"nodeType":"33","messageId":"34","endLine":55,"endColumn":45,"fix":"35"},"no-unused-vars","'ReactFCCtest' is defined but never used.","Identifier","unusedVar","'CopyToClipboard' is defined but never used.","'motion' is defined but never used.","'AnimatePresence' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"36","text":"37"},[2018,2018]," rel=\"noreferrer\""]